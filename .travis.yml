# This is the complex Travis configuration, which is intended for use
# on open source libraries which need compatibility across multiple GHC
# versions, must work with cabal-install, and should be
# cross-platform. For more information and other options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Use new container infrastructure to enable caching
sudo: false

# Choose a lightweight base image; we provide our own build tools.
language: c

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack
  - $HOME/unitb/unfoldable/.stack-work/install
  - $HOME/unitb/unfoldable/.stack-work/downloaded
  timeout: 1000

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
  # We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  # https://github.com/hvr/multi-ghc-travis
  #- env: BUILD=cabal GHCVER=7.0.4 CABALVER=1.16 HAPPYVER=1.19.5 ALEXVER=3.1.7
  #  compiler: ": #GHC 7.0.4"
  #  addons: {apt: {packages: [cabal-install-1.16,ghc-7.0.4,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  #- env: BUILD=cabal GHCVER=7.2.2 CABALVER=1.16 HAPPYVER=1.19.5 ALEXVER=3.1.7
  #  compiler: ": #GHC 7.2.2"
  #  addons: {apt: {packages: [cabal-install-1.16,ghc-7.2.2,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  #- env: BUILD=cabal GHCVER=7.4.2 CABALVER=1.16 HAPPYVER=1.19.5 ALEXVER=3.1.7
  #  compiler: ": #GHC 7.4.2"
  #  addons: {apt: {packages: [cabal-install-1.16,ghc-7.4.2,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  #- env: BUILD=cabal GHCVER=7.6.3 CABALVER=1.16 HAPPYVER=1.19.5 ALEXVER=3.1.7
  #  compiler: ": #GHC 7.6.3"
  #  addons: {apt: {packages: [cabal-install-1.16,ghc-7.6.3,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  #- env: BUILD=cabal GHCVER=7.8.4 CABALVER=1.18 HAPPYVER=1.19.5 ALEXVER=3.1.7
  #  compiler: ": #GHC 7.8.4"
  #  addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: ": #GHC 7.10.3"
    addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}
  - env: BUILD=cabal GHCVER=8.0.1 CABALVER=1.24 HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: ": #GHC 8.0.1"
    addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # Build with the newest GHC and cabal-install. This is an accepted failure,
  # see below.
  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
    compiler: ": #GHC HEAD"
    addons: {apt: {packages: [cabal-install-head,ghc-head,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default"
    addons: {apt: {packages: [libgmp-dev]}}

  #- env: BUILD=stack ARGS="--resolver lts-2"
  #  compiler: ": #stack 7.8.4"
  #  addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-3"
    compiler: ": #stack 7.10.2"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-6"
    compiler: ": #stack 7.10.3"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-7"
    compiler: ": #stack 8.0.1"
    addons: {apt: {packages: [libgmp-dev]}}

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly"
    addons: {apt: {packages: [libgmp-dev]}}

  # Build on OS X in addition to Linux
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default osx"
    os: osx

  #- env: BUILD=stack ARGS="--resolver lts-2"
  #  compiler: ": #stack 7.8.4 osx"
  #  os: osx

  - env: BUILD=stack ARGS="--resolver lts-3"
    compiler: ": #stack 7.10.2 osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-6"
    compiler: ": #stack 7.10.3 osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-7"
    compiler: ": #stack 8.0.1 osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly osx"
    os: osx

  allow_failures:
  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

  if [ "$CABALVER" != "1.16" ]
  then
    echo 'jobs: $ncpus' >> $HOME/.cabal/config
  fi

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Get the list of packages from the stack.yaml file
      PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      ;;
  esac
  set +ex

script:
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
      ;;
    cabal)
      cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check || [ "$CABALVER" == "1.16" ]
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests
        cabal build
        cd $ORIGDIR
      done
      ;;
  esac
  set +ex
deploy:
  provider: hackage
  username: simon.hudon@gmail.com
  password:
    secure: KRlVN4C6NQSV/FdbLtgkNSHy4OWjFisv3JuI5uDqdU8EfJKAwptXPiqVZQ2T3lZhcsBGyFV3lft3ElvcKrDkrI8ELl4EsH05vjlc3xVCm/vYauxp0FYeKIUshN0fVOTFCDmcNgLbGLVFgN1TusfsODqcE4n1AaD1fNWuKZIkywi6NV5ZHjuMnD9A0KLWVBSIHYBrkZ9OYrerh+nIDf7Tf/kjY6klJwNZ8uCShg3pKmwZ06MZmAQJav6sdthX73v6bulF8NDq2D5aORdwdjNsnMJE+Gekbvbh3QN22VZ5eeVvKcTcZE3Yo+IkzUxx/l+Eu0VMkwMNiKwZKUUKvAXaKWjH1l9X3VLIEd+K1WrMHzg7yYXyAR/FiwqLdYGAe4rZ3xDcTELDkb0Dk5SXnbk1Pda22hfMPv/zcdhNLiRDp31tuURnAx46z9BvAaKd9AGIrJtR7ma7rWew5FctZS8ROt8kF5jlE992qkBMMsCAEBoqWY867GyMvfZj2qb30hmwpG8SDHi0cmbm0/ZEKVrn6VCVYoSbdbaMfLL5YAe+L2ITzglI+cETAAmuE1R8AdHJ5nEsGrc42SYrdNkHNl2//mjR/Bs27WLWo4hzxjgeLyfebpHQvhuXTiSsYJPHoy9vK9JRP3yJvacEbj34m8/5w10Sjaku30+G1nTCERYNEpU=
  on:
    repo: unitb/portable-template-haskell-lens
    tags: true
notifications:
  slack:
    secure: NmdY4oCTAu4ZQ90v08rZ+KT+surGwT9QR6SQmuxdDukzR2R6EHJBMJDy0jC/dxotpgLNmz3qebeG4MAv0BoWkUmZUo4/ZIu4rHgfWnEjwMm1prneXRmN9100Bk7rXutVd3IGpBvvenbLr5xK6X8uaQqnHYPgHSR/XoW271+wdXGTt2tLn2wyYlz7eqMyQXDKr76p6j0fkj7+Xce0g03xnB8OxPgyjl8tf8rZkaUdwEMWfpwz8qpSmZ3ojYiOfytSIHZjGczq5uXzkv/1dlsj70I1uP6UbJAoC/scYLnlDwTUgWEecFsnsi0KKotaoreTdP8e73ealzbT5r0TjfM/PdqspXiWZVnnIPIw6e5l3P9FB7MtfeDLnwe5he0eoz0f53Hg/1y587GMi0O64sDx6ffjAq4bKSIoISusWS8en9sa45eDfjlp5YYAXCNMXjzXv8yEwSiWy4Fhf9TPuO2oxvmW25SRf7dBruIyzaqMHyiIAJTmWylUkc21zMPRuS8u/iCiRNNHqlEzJUXbbCL0PdOTLi8qbKk6Cm4O8nIaDUEHBfiFdrIfWElgbuqjcOYtvMgBJVfd/Az3wLzt3R9yDVdLLo43rt7QyUpWeYUtWzJa/rhQpQfkCugUyfgd8QUvRyiCXdFhu4YVqsqaaVwcTtMYntKcXoBDyoguR4gf24M=
